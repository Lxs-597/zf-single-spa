{"version":3,"file":"single-spa.js","sources":["../../src/applications/helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/load.js","../../src/lifecycles/mount.js","../../src/lifecycles/unmount.js","../../src/start.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["export const NOT_LOADED = 'NOT_LOADED' // 初始状态\r\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE' // 加载资源\r\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED' // 还没调用bootstrap方法\r\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING' // 加载中\r\nexport const NOT_MOUNTED = 'NOT_BOOTSTRAPPED' // 还未挂载\r\nexport const MOUNTING = 'MOUNTING' // 挂载中\r\nexport const MOUNTED = 'MOUNTED' // 挂载完成\r\nexport const UPDATING = 'UPDATING' // 更新中\r\nexport const UNMOUNTING = 'UNMOUNTING' // 解除挂载中\r\nexport const UNLOADING = 'UNLOADING' // 卸载中\r\nexport const LOAD_ERR = 'LOAD_ERR'\r\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN'\r\n\r\n// 应用是否激活\r\nexport const isActive = app => app.status === MOUNTED\r\n\r\n// 应用是否要被激活\r\nexport const shouldBeActive = app => app.activeWhen(window.location)","import { BOOTSTRAPPING, NOT_BOOTSTRAPPED, NOT_MOUNTED } from \"../applications/helpers\"\r\n\r\nexport const toBootstrapPromise = async app => {\r\n  if (app.status !== NOT_BOOTSTRAPPED) return app\r\n\r\n  app.status = BOOTSTRAPPING\r\n  await app.bootstrap(app.customProps)\r\n  app.status = NOT_MOUNTED\r\n\r\n  return app\r\n}\r\n","import { LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED } from \"../applications/helpers\"\r\n\r\nexport const toLoadPromise = async app => {\r\n  if (app.loadPromise) return app.loadPromise\r\n\r\n  return (app.loadPromise = Promise.resolve().then(async () => {\r\n    app.status = LOADING_SOURCE_CODE\r\n\r\n    const { mount, bootstrap, unmount } = await app.loadApp(app.customProps)\r\n\r\n    app.status = NOT_BOOTSTRAPPED\r\n    app.mount = pipeAsyncFunctions(mount)\r\n    app.unmount = pipeAsyncFunctions(unmount)\r\n    app.bootstrap = pipeAsyncFunctions(bootstrap)\r\n    delete app.loadPromise\r\n\r\n    return app\r\n  }))\r\n}\r\n\r\nfunction pipeAsyncFunctions(fns) {\r\n  fns = Array.isArray(fns) ? fns : [fns]\r\n\r\n  return props => fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve())\r\n}\r\n","import { MOUNTED, MOUNTING, NOT_MOUNTED } from \"../applications/helpers\"\r\n\r\n\r\nexport const toMountPromise = async app => {\r\n  if (app.status !== NOT_MOUNTED) return app\r\n\r\n  app.status = MOUNTING\r\n  await app.mount(app.customProps)\r\n  app.status = MOUNTED\r\n\r\n  return app\r\n}\r\n","import { MOUNTED, NOT_MOUNTED, UNMOUNTING } from \"../applications/helpers\"\r\n\r\nexport const toUnmountPromise = async app => {\r\n  // 当前应用没有挂载\r\n  if (app.status !== MOUNTED) return app\r\n\r\n  app.status = UNMOUNTING\r\n  await app.unmount(app.customProps)\r\n  app.status = NOT_MOUNTED\r\n\r\n  return app\r\n}\r\n","import { reroute } from \"./navigations/reroute\"\r\n\r\nexport let started = false\r\n\r\nexport const start = () => {\r\n  started = true\r\n  reroute() // 加载应用\r\n}","import { getAppChanges } from \"../applications/app\"\r\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\"\r\nimport { toLoadPromise } from \"../lifecycles/load\"\r\nimport { toMountPromise } from \"../lifecycles/mount\"\r\nimport { toUnmountPromise } from \"../lifecycles/unmount\"\r\nimport { started } from \"../start\"\r\n\r\n// 核心应用处理方法\r\nexport const reroute = () => {\r\n  const { appToLoad, appToMount, appToUnmount } = getAppChanges()\r\n\r\n  console.log(appToLoad, appToMount, appToUnmount)\r\n\r\n  if (started) {\r\n    console.log('嗲用start')\r\n    return performAppChanges()\r\n  } else {\r\n    console.log('嗲用register')\r\n    return loadApps()\r\n    // reroute() // 加载应用\r\n  }\r\n\r\n  // 预加载应用\r\n  async function loadApps() {\r\n    const loadApps = await Promise.all(appToLoad.map(toLoadPromise))\r\n\r\n    console.log(loadApps)\r\n  }\r\n\r\n  // 挂载应用\r\n  async function performAppChanges() {\r\n    // 卸载不需要的应用\r\n    let unmountApps = Promise.all(appToUnmount.map(toUnmountPromise))\r\n    // 加载需要的应用\r\n    appToLoad.map(async app => {\r\n      app = await toLoadPromise(app)\r\n      app = await toBootstrapPromise(app)\r\n\r\n      return toMountPromise(app)\r\n    })\r\n\r\n    appToMount.map(async app => {\r\n      app = await toBootstrapPromise(app)\r\n\r\n      return toMountPromise(app)\r\n    })\r\n  }\r\n}","import { reroute } from \"../navigations/reroute\"\r\nimport { started } from \"../start\"\r\nimport { shouldBeActive, NOT_LOADED, SKIP_BECAUSE_BROKEN, LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED, BOOTSTRAPPING, NOT_MOUNTED, MOUNTED } from \"./helpers\"\r\n\r\nconst apps = []\r\n\r\nexport const registerApplication = (appName, loadApp, activeWhen, customProps) => {\r\n  apps.push({\r\n    status: NOT_LOADED,\r\n    name: appName,\r\n    loadApp,\r\n    activeWhen,\r\n    customProps\r\n  })\r\n\r\n  console.log(apps)\r\n\r\n  reroute()\r\n}\r\n\r\nexport const getAppChanges = () => {\r\n  const appToUnmount = [] // 要卸载的app\r\n  const appToLoad = [] // 要加载的app\r\n  const appToMount = [] // 要挂载的app\r\n\r\n  apps.forEach(app => {\r\n    const status = app.status\r\n    const appShouldBeActive = shouldBeActive(app)\r\n\r\n    switch (status) {\r\n      case NOT_LOADED:\r\n      case LOADING_SOURCE_CODE: {\r\n        if (appShouldBeActive) {\r\n          appToLoad.push(app)\r\n        }\r\n        break\r\n      }\r\n\r\n      case NOT_BOOTSTRAPPED:\r\n      case BOOTSTRAPPING:\r\n      case NOT_MOUNTED: {\r\n        if (appShouldBeActive) {\r\n          appToMount.push(app)\r\n        }\r\n        break\r\n      }\r\n\r\n      case MOUNTED: {\r\n        if (!appShouldBeActive) {\r\n          appToUnmount.push(app)\r\n        }\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  return {\r\n    appToLoad,\r\n    appToMount,\r\n    appToUnmount,\r\n  }\r\n}"],"names":[],"mappings":"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"}